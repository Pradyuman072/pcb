@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Light mode (Black and White) */
    --background: 0 0% 100%; /* White background */
    --foreground: 0 0% 0%; /* Black foreground */

    --card: 0 0% 98%; /* Slightly off-white card background */
    --card-foreground: 0 0% 0%; /* Black card foreground */

    --popover: 0 0% 100%; /* White popover background */
    --popover-foreground: 0 0% 0%; /* Black popover foreground */

    --primary: 0 0% 0%; /* Black primary color */
    --primary-foreground: 0 0% 100%; /* White primary foreground */

    --secondary: 0 0% 90%; /* Light gray secondary color */
    --secondary-foreground: 0 0% 0%; /* Black secondary foreground */

    --muted: 0 0% 95%; /* Light gray muted background */
    --muted-foreground: 0 0% 40%; /* Dark gray muted foreground */

    --accent: 0 0% 90%; /* Light gray accent color */
    --accent-foreground: 0 0% 0%; /* Black accent foreground */

    --destructive: 0 85% 60%; /* Red destructive color */
    --destructive-foreground: 0 0% 100%; /* White destructive foreground */

    --border: 0 0% 80%; /* Light gray border color */
    --input: 0 0% 80%; /* Light gray input color */
    --ring: 0 0% 0%; /* Black ring color */

    --radius: 0.5rem;
  }

  .dark {
    /* Dark mode (Black and Neon Green) */
    --background: 0 0% 5%; /* Almost black background */
    --foreground: 120 100% 95%; /* Light neon green foreground */

    --card: 0 0% 8%; /* Dark card background */
    --card-foreground: 120 100% 95%; /* Light neon green card foreground */

    --popover: 0 0% 5%; /* Almost black popover background */
    --popover-foreground: 120 100% 95%; /* Light neon green popover foreground */

    --primary: 120 100% 50%; /* Neon green primary color */
    --primary-foreground: 0 0% 0%; /* Black primary foreground */

    --secondary: 0 0% 15%; /* Dark gray secondary color */
    --secondary-foreground: 120 100% 95%; /* Light neon green secondary foreground */

    --muted: 0 0% 15%; /* Dark gray muted background */
    --muted-foreground: 120 100% 70%; /* Muted neon green foreground */

    --accent: 120 100% 15%; /* Dark neon green accent color */
    --accent-foreground: 120 100% 95%; /* Light neon green accent foreground */

    --destructive: 0 100% 50%; /* Bright red destructive color */
    --destructive-foreground: 0 0% 100%; /* White destructive foreground */

    --border: 120 100% 20%; /* Dark neon green border color */
    --input: 120 100% 20%; /* Dark neon green input color */
    --ring: 120 100% 50%; /* Neon green ring color */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

.bg-grid-pattern {
  background-image: linear-gradient(to right, rgba(var(--foreground), 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(var(--foreground), 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  background-color: hsl(var(--background));
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--background));
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--primary) / 0.5);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary) / 0.8);
}

/* Button hover effects */
.btn-hover-effect {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-hover-effect::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: all 0.5s ease;
}

.btn-hover-effect:hover::before {
  left: 100%;
}

/* Glow effect for selected items */
.glow-effect {
  box-shadow: 0 0 15px hsl(var(--primary) / 0.5);
  transition: box-shadow 0.3s ease;
}

.glow-effect:hover {
  box-shadow: 0 0 20px hsl(var(--primary) / 0.8);
}

/* Circuit animation */
@keyframes circuit-pulse {
  0% {
    opacity: 0.2;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.2;
  }
}

.circuit-animate {
  animation: circuit-pulse 2s infinite;
}

/* Neon gradient text effect */
.glow-text {
  background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 5px hsl(var(--primary) / 0.5), 0 0 10px hsl(var(--primary) / 0.5);
}

/* Terminal connection points */
.terminal-point {
  transition: all 0.2s ease;
}

.terminal-point:hover {
  filter: brightness(1.5);
  box-shadow: 0 0 8px currentColor;
}

/* Connection lines */
.connection-line {
  stroke-linecap: round;
  filter: drop-shadow(0 0 2px currentColor);
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .responsive-container {
    padding: 0.5rem;
  }

  .responsive-text {
    font-size: 0.875rem;
  }
}

/* Dark mode glow effects */
.dark .glow-hover:hover {
  box-shadow: 0 0 15px hsl(var(--primary));
}

.dark .text-glow {
  text-shadow: 0 0 5px hsl(var(--primary) / 0.7);
}

